// Copyright (c) 2017-2023 Cloudflare, Inc.
// Licensed under the Apache 2.0 license found in the LICENSE file or at:
//     https://opensource.org/licenses/Apache-2.0
import * as assert from 'node:assert';
import {
  createInstrumentationState,
  createTailStreamHandler,
  runInstrumentationTest,
} from 'instrumentation-test-helper';

// Create module-level state using the helper
const state = createInstrumentationState();

export default {
  tailStream: createTailStreamHandler(state),
};

export const test = {
  async test() {
    await runInstrumentationTest(state, expectedSpans, {
      testName: 'D1 instrumentation',
      mapFn: (span) => {
        // Remove the non-deterministic http.response.body.size field
        const { 'http.response.body.size': _, ...spanWithoutSize } = span;
        return spanWithoutSize;
      },
    });
  },
};

const expectedSpans = [
  {
    name: 'prepare',
    query:
      ' CREATE TABLE users\n' +
      '        (\n' +
      '            user_id    INTEGER PRIMARY KEY,\n' +
      '            name       TEXT,\n' +
      '            home       TEXT,\n' +
      '            features   TEXT,\n' +
      '            land_based BOOLEAN\n' +
      '        );',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/execute?resultsFormat=NONE',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 231n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'SELECT * FROM users;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 42n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'SELECT * FROM users;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/execute?resultsFormat=NONE',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 42n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'DELETE FROM users;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/execute?resultsFormat=NONE',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 40n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query:
      '\n' +
      '        INSERT INTO users (name, home, features, land_based) VALUES\n' +
      "          ('Albert Ross', 'sky', 'wingspan', false),\n" +
      "          ('Al Dente', 'bowl', 'mouthfeel', true)\n" +
      '        RETURNING *\n' +
      '    ',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 223n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'DELETE FROM users;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/execute?resultsFormat=NONE',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 40n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query:
      '\n' +
      '        INSERT INTO users (name, home, features, land_based) VALUES\n' +
      "          ('Albert Ross', 'sky', 'wingspan', false),\n" +
      "          ('Al Dente', 'bowl', 'mouthfeel', true)\n" +
      '        RETURNING *\n' +
      '    ',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/execute?resultsFormat=NONE',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 223n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'select 1;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 31n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 31n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 31n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 31n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'SELECT * FROM users;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 42n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 42n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 42n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 42n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query: 'SELECT * FROM users WHERE user_id = ?;',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 61n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 61n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 61n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 61n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 61n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 61n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 61n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 61n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 125n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query: 'SELECT count(1) as count FROM users WHERE land_based = ?',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 79n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query: 'SELECT count(1) as count FROM users WHERE land_based = ?',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 79n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query: 'SELECT count(1) as count FROM users WHERE land_based = ?',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 79n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query: 'SELECT count(1) as count FROM users WHERE land_based = ?',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 79n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query: 'SELECT count(1) as count FROM users WHERE land_based = ?',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 79n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query: 'CREATE TABLE abc (a INT, b INT, c INT);',
    closed: true,
  },
  {
    name: 'prepare',
    query: 'CREATE TABLE cde (c TEXT, d TEXT, e TEXT);',
    closed: true,
  },
  {
    name: 'prepare',
    query: 'INSERT INTO abc VALUES (1,2,3),(4,5,6);',
    closed: true,
  },
  {
    name: 'prepare',
    query:
      'INSERT INTO cde VALUES ("A", "B", "C"),("D","E","F"),("G","H","I");',
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 298n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'SELECT * FROM abc, cde;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 45n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'SELECT * FROM abc, cde;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 45n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'SELECT * FROM abc, cde;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 45n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'SELECT * FROM abc, cde;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 45n,
    'http.response.status_code': 200n,
    closed: true,
  },
  {
    name: 'prepare',
    query: "SELECT * from cde WHERE c IN ('A','B','C','X','Y','Z')",
    closed: true,
  },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 76n,
    'http.response.status_code': 200n,
    closed: true,
  },
  { name: 'prepare', query: 'DROP TABLE users;', closed: true },
  { name: 'prepare', query: 'DROP TABLE abc;', closed: true },
  { name: 'prepare', query: 'DROP TABLE cde;', closed: true },
  {
    name: 'fetch',
    'network.protocol.name': 'http',
    'network.protocol.version': 'HTTP/1.1',
    'http.request.method': 'POST',
    'url.full': 'http://d1/query?resultsFormat=ROWS_AND_COLUMNS',
    'http.request.header.content-type': 'application/json',
    'http.request.body.size': 117n,
    'http.response.status_code': 200n,
    closed: true,
  },
];
